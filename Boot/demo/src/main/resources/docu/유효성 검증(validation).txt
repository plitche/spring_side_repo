* 유효성 검사
    - 서비스 비즈니스 로직이 올바르게 동작하기 위해 사용되는 데이터에 대한 사전 검증하는 작업이 필요함
    - 유효성 검사 혹은 데이터 검증이라고 부르는데, 흔히 Validation이라고 부름
    - 데이터의 검증은 여러 계층에서 발생하는 흔한 작업
    - Validation은 들어오는 데이터에 대해 의도한 형식의 값이 제대로 들어오는지 체크하는 과정을 뜻함

* 일반적인 Validation의 문제점
    - 어플리케이션 전체적으로 분산되어 존재
    - 코드의 중복이 심함
    - 비즈니스 로직에 섞여 있어 검사 로직 추적이 어려움

* Bean Validation / Hibernate Validator
    - Java에서 Bean Validation이라는 데이터 유효성 검사 프레임워크를 제공
    - Bean Validation은 어노테이션을 통해 다양한 데이터 검증을 할 수 있게 기능을 제공

    - Hibernate Validator는 Bean Validator 명세에 대한 구현체
    - Spring Boot의 유효성 검사 표준

* 어노테이션
    - @Size: 문자의 길이 조건
    - @NotNull
    - @NotEmpty: @NotNull + ""
    - @NotBlank: @NotEmpty + " "

    - @Past: 과거 날짜
    - @PastOrPresent: @Past + 오늘 날짜
    - @Future: 미래 날짜
    - @FutureOrPresent: @Future + 오늘 날짜

    - @Pattern: 정규식

    - @Max
    - @Min
    - @AssertTrue / AssertFalse

    - @Valid: 해당 객체의 유효성 검사

